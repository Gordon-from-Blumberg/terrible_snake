<?xml version="1.0" encoding="UTF-8"?>
<project name="terrible_snake" default="build" basedir=".">
    <property name="module.dir" value="${basedir}"/>

    <property file="build.properties"/>

    <property name="jar.name" value="run.jar"/>

    <property name="build.lib.dir" value="${build.dir}/lib"/>
    <property name="build.resources.dir" value="${build.dir}/resources"/>

    <fileset id="settings.fileset" dir="${src.resources.dir}/settings">
        <include name="*.json"/>
    </fileset>

    <fileset id="dictionary.fileset" dir="${src.resources.dir}/dictionary">
        <include name="*dictionary.properties"/>
    </fileset>

    <fileset id="groovy.fileset" dir="${src.resources.dir}/groovy">
        <include name="*.groovy"/>
    </fileset>

    <fileset id="build.fileset" dir="build">
        <include name="*.jar"/>
        <include name="*/**.jar"/>
    </fileset>

    <path id="dependencies.classpath">
        <fileset refid="build.fileset"/>
    </path>

    <fileset id="resources.fileset" dir="${src.resources.dir}">
        <include name="settings/*.json"/>
        <include name="dictionary/*dictionary.properties"/>
        <!--<include name="groovy/*.groovy"/>-->
    </fileset>

    <target name="build" depends="clear-build-dir, compile, copy-resources">
        <jar basedir="${output.dir}"
             destfile="${build.dir}/${jar.name}"
             manifest="${manifest.file}"
             includes="**">
        </jar>
    </target>

    <target name="compile" depends="build-all-modules">
        <!--<antcall target="clear-dir" inheritall="false">-->
        <!--<param name="target.dir" value="${output.dir}"/>-->
        <!--</antcall>-->

        <javac srcdir="${src.java.dir}"
               destdir="${output.dir}"
               classpathref="dependencies.classpath"
               encoding="${javac.encoding}"
               debug="${compile.debug}"
               source="${java.v}"
               target="${java.v}"/>
    </target>

    <target name="copy-resources">
        <antcall target="clear-dir" inheritall="false">
            <param name="target.dir" value="${build.resources.dir}"/>
        </antcall>

        <copy todir="${build.resources.dir}">
            <resources refid="resources.fileset"/>
        </copy>
    </target>

    <target name="build-all-modules">
        <antcall target="build-module" inheritall="false">
            <param name="module.name" value="lib"/>
        </antcall>

        <antcall target="build-module" inheritall="false">
            <param name="module.name" value="game-lib"/>
        </antcall>

        <antcall target="build-module" inheritall="false">
            <param name="module.name" value="terrible_snake"/>
        </antcall>
    </target>

    <target name="build-module">
        <echo message="*** build module ${module.name} ***"/>

        <antcall target="call-ant-file" inheritall="false">
            <param name="target.name" value="build"/>
            <param name="target.root.dir" value="modules/${module.name}"/>
        </antcall>

        <property file="modules/${module.name}/build.properties"/>
        <copy todir="${build.dir}/${dest.build.dir}">
            <fileset dir="modules/${module.name}/build"/>
        </copy>
    </target>

    <target name="clear-dir">
        <mkdir dir="${target.dir}"/>
        <echo message="*** clear dir ${target.dir}"/>
        <delete includeemptydirs="true">
            <fileset dir="${target.dir}" includes="**/*"/>
        </delete>
    </target>

    <target name="clear-build-dir">
        <antcall target="clear-dir" inheritall="false">
            <param name="target.dir" value="${build.dir}"/>
        </antcall>
    </target>

    <target name="call-ant-file">
        <echo message="*** run task ${target.name} from ${target.root.dir} ***"/>
        <ant
                antfile="${target.root.dir}/build.xml"
                target="${target.name}"
                inheritAll="false"/>
    </target>
</project>